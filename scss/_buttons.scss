// stylelint-disable selector-no-qualifying-type

//
// Base styles
//

.btn {
  position: relative;
  z-index: 0;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  // display: inline-block;
  font-family: $btn-font-family;
  font-weight: $btn-font-weight;
  line-height: $btn-line-height;
  color: $body-color;
  text-align: center;
  white-space: $btn-white-space;
  letter-spacing: $btn-letter-spacing;
  vertical-align: middle;
  cursor: if($enable-pointer-cursor-for-buttons, pointer, null);
  user-select: none;
  background-color: transparent;
  border: $btn-border-width solid transparent;
  @include button-size($btn-padding-y, $btn-padding-x, $btn-font-size, $btn-border-radius);

  &:hover {
    color: $body-color;
    text-decoration: none;
  }

  &:focus,
  &.focus {
    outline: 0;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    opacity: $btn-disabled-opacity;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {
    // background-image: none;
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}


//
// Alternate buttons
//

@each $color, $value in $theme-colors {
  .btn-#{$color} {
    @include button-variant($background: $value, $border: $value);
  }
}

@each $color, $value in $theme-colors {
  .btn-outline-#{$color} {
    @include button-outline-variant($color: $value);
  }
}

@each $color, $value in $theme-colors {
  .btn-raised-#{$color} {
    @include button-raised-variant($background: $value, $border: $value);
  }
}

@each $color, $value in $theme-colors {
  .btn-flat-#{$color} {
    @include button-flat-variant($value);
  }
}

@each $color, $value in $theme-colors {
  .btn-fab-#{$color} {
    @include button-fab-variant($value);

    // Button Sizes
    &.btn-lg {
      @include button-circle-size();
    }

    &.btn-sm {
      @include button-circle-size($width: 2.5rem, $font-size: $font-size-sm);
    }
  }
}

@each $color, $value in $theme-colors {
  .btn-icon-#{$color} {
    @include button-icon-variant($value);

    // Button Sizes
    &.btn-lg {
      @include button-circle-size($width: 3rem, $font-size: $font-size-sm);
    }

    &.btn-sm{
      @include button-circle-size($width: 1.875rem, $font-size: $font-size-sm);
    }
  }
}

@each $color, $value in $theme-colors {
  .btn-legacy-#{$color} {
    @include button-legacy-variant($color);
  }
}


//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  font-weight: $font-weight-normal;
  color: $btn-link-color;
  text-decoration: $link-decoration;

  &:hover {
    color: $btn-link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &:focus,
  &.focus {
    text-decoration: $link-hover-decoration;
    box-shadow: none;
  }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
    background-color: transparent;
  }

  // No need for an active state here
}


//
// Button Sizes
//

.btn-lg {
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-border-radius-lg);
}

.btn-sm {
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-border-radius-sm);
}


//
// Block button
//

.btn-block {
  display: block;
  width: 100%;

  // Vertically space out multiple block buttons
  + .btn-block {
    margin-top: $btn-block-spacing-y;
  }
}


//
// Button modifiers
//

.btn-pill {
  @include border-radius($btn-pill-border-radius);
  box-shadow: $btn-pill-box-shadow;
  @include transition($btn-pill-transition);
  @include button-pill-variant();

  &::before {
    @include border-radius($btn-pill-border-radius);
  }

  &:hover,
  &:focus,
  &.focus {
    box-shadow: $btn-pill-hover-box-shadow;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {
    box-shadow: $btn-pill-box-shadow;
  }
}
